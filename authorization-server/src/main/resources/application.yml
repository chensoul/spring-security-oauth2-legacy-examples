server:
  port: 8000

spring:
  main:
    allow-bean-definition-overriding: true
  redis:
    host: localhost
    password: 123456

jdbc:
  url: jdbc:h2:~/data/oauth2;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
  driverClassName: org.h2.Driver
  username: sa
  password:

authorization:
  client-type: jdbc
  user-type: jdbc
  token-type: jwt

#spring:
#  security:
#    oauth2:
#      client:
#        registration:
#          client:
#            client-id: web-client
#            client-secret: $2a$10$JknlOkbQANofGnc9BRkLv.Kuixt/pZleX2VC54udsy5Gqry7iSFzK
#            client-name: Custom
#            scope: userinfo,resource
#            provider: support-provider
#            authorization-grant-type: authorization_code
#            client-authentication-method: basic
#            redirect-uri-template: "{baseUrl}/login/oauth2/code/{registrationId}"
#            user-name-attribute: name
#          github:
#            client-id: 7f516f058038fbab149d
#            client-secret: 7bbe2d4fd83f6cb01b0691be067780513a1bc76b
#            scope: read:user,repo
#        provider:
#          support-provider:
#            token-uri: http://localhost:8010/oauth/token
#            authorization-uri: http://localhost:8010/oauth/authorize
#            user-info-uri: http://localhost:8010/userinfo
#            user-name-attribute: name

logging:
  level:
    org.springframework.security: trace

